return {
  {
    "yetone/avante.nvim",
    event = { "BufReadPost", "BufNewFile" }, -- T·∫£i khi m·ªü file
    lazy = false, -- Load ngay khi v√†o Neovim
    build = "make",
    dependencies = {
      "nvim-lua/plenary.nvim",
      "MunifTanjim/nui.nvim",
      "nvim-tree/nvim-web-devicons",
      "github/copilot.vim", -- S·ª≠ d·ª•ng Copilot l√†m provider
    },
    opts = {
      provider = "copilot", -- D√πng Copilot
      providers = {
        copilot = {
          extra = {
            max_tokens = 128000, -- D√†nh cho file l·ªõn
            temperature = 0.7, -- C√¢n b·∫±ng gi·ªØa ch√≠nh x√°c & s√°ng t·∫°o
          },
        },
      },
      -- ‚öôÔ∏è T·∫Øt auto-suggestion ƒë·ªÉ kh√¥ng hi·ªÉn th·ªã g·ª£i √Ω m·ªù
      auto_suggestions_provider = nil,
      behaviour = {
        auto_suggestions = false,
        auto_apply_diff_after_generation = false, -- T·ª± tay x√°c nh·∫≠n diff
      },
      ui = {
        border = "rounded",
        layout = "vertical",
        width = 0.5,
        height = 0.6,
      },
    },
    config = function(_, opts)
      require("avante").setup(opts)

      -- üîß T·∫Øt ghost text c·ªßa Copilot (c√°i m·ªù m·ªù g√¢y kh√≥ ch·ªãu)
      vim.g.copilot_disable_inline = true
      vim.g.copilot_no_tab_map = true
      vim.g.copilot_assume_mapped = true

      -- ‚ö° G√°n ph√≠m t·∫Øt th·ªß c√¥ng ƒë·ªÉ nh·∫≠n g·ª£i √Ω Copilot n·∫øu mu·ªën
      vim.keymap.set("i", "<C-l>", 'copilot#Accept("<CR>")', {
        expr = true,
        replace_keycodes = false,
        desc = "Accept Copilot suggestion",
      })
    end,
  },
}
